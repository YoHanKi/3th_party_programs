spring:
  application:
    name: logs_analytics

  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true
    show-sql: true
    open-in-view: false

  # Datasource Configuration
  datasource:
    url: jdbc:mysql://localhost:3306/logs_analytics?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
    username: loguser
    password: logpassword
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 30000
      connection-timeout: 30000

  # Kafka Configuration
  kafka:
    bootstrap-servers: localhost:29092
    consumer:
      group-id: log-analytics-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
    listener:
      ack-mode: MANUAL_IMMEDIATE
      concurrency: 3

  # Elasticsearch Configuration
  elasticsearch:
    uris: http://localhost:9200
    connection-timeout: 1s
    socket-timeout: 30s

# Server Configuration
server:
  port: 8082
  servlet:
    context-path: /api

# Logging Configuration
logging:
  level:
    root: INFO
    org.springframework: INFO
    com.log_analytics: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  file:
    name: logs/log-analytics.log

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus,metrics
  metrics:
    distribution:
      percentiles-histogram:
        http.server.requests: true
  prometheus:
    metrics:
      export:
        enabled: true