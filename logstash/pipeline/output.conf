input {
  kafka {
    bootstrap_servers => "kafka:9092"
    topics => ["nginx-access-logs", "application-logs", "beats-logs"]
    group_id => "logstash-consumer"
    codec => json
    auto_offset_reset => "earliest"
  }
}

filter {
  # Add timestamp if not present
  if ![timestamp] {
    mutate {
      add_field => { "timestamp" => "%{@timestamp}" }
    }
  }
  
  # Add machine learning features for anomaly detection
  if [type] == "nginx-access" {
    # Extract hour of day for traffic pattern analysis
    date {
      match => [ "timestamp", "ISO8601" ]
      target => "@timestamp"
    }
    ruby {
      code => "event.set('hour_of_day', event.get('@timestamp').time.hour)"
    }
    
    # Calculate response time buckets for anomaly detection
    if [response_time] {
      mutate {
        convert => { "response_time" => "float" }
      }
      if [response_time] < 0.1 {
        mutate { add_field => { "response_time_bucket" => "fast" } }
      } else if [response_time] < 0.5 {
        mutate { add_field => { "response_time_bucket" => "normal" } }
      } else if [response_time] < 2.0 {
        mutate { add_field => { "response_time_bucket" => "slow" } }
      } else {
        mutate { add_field => { "response_time_bucket" => "very_slow" } }
      }
    }
  }
}

output {
  if [type] == "nginx-access" {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "nginx-access-%{+YYYY.MM.dd}"
      document_id => "%{[@metadata][kafka][key]}"
    }
  }
  
  if [type] == "application" {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "application-logs-%{+YYYY.MM.dd}"
      document_id => "%{[@metadata][kafka][key]}"
    }
  }
  
  if [type] == "beats" {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "system-metrics-%{+YYYY.MM.dd}"
      document_id => "%{[@metadata][kafka][key]}"
    }
  }
}